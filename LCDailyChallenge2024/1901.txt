// https://leetcode.com/problems/minimum-falling-path-sum/?envType=daily-question&envId=2024-01-19

class Solution {
    public int minFallingPathSum(int[][] matrix) {
        int n = matrix.length;
        int[][] dp = new int[n][n];

        for (int i=n-1; i>=0; i--) {
            for (int j=0; j<n; j++) {
                if (i == n-1) {
                    dp[i][j] = matrix[i][j];
                } else {
                    int min = dp[i+1][j];
                    if (j > 0) {
                        min = Math.min(min, dp[i+1][j-1]);
                    }
                    if (j < n-1) {
                        min = Math.min(min, dp[i+1][j+1]);
                    }
                    dp[i][j] = matrix[i][j] + min;
                }
            }
        }

        int ans = Integer.MAX_VALUE;
        for (int i=0; i<n; i++) {
            ans = Math.min(ans, dp[0][i]);
        }

        return ans;
    }
}