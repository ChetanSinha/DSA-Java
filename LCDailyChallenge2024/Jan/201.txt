https://leetcode.com/problems/convert-an-array-into-a-2d-array-with-conditions/submissions/?envType=daily-question&envId=2024-01-02

class Solution {
    private List<List<Integer>> func(int[] nums) {
        HashMap<Integer, Integer> map = new HashMap<>();
        int count = 0;
        for (int i=0; i<nums.length; i++) {
            if (map.containsKey(nums[i])) {
                int val = map.get(nums[i]);
                map.put(nums[i], ++val);
            } else {
                map.put(nums[i], 1);
            }
            count += 1;
        }   

        List<List<Integer>> ans = new ArrayList<>();
        while (count > 0) {
            List<Integer> row = new ArrayList<>();
            for (Map.Entry<Integer, Integer> entry : map.entrySet()) {
                if (entry.getValue() > 0) {
                    row.add(entry.getKey());
                    int val = entry.getValue();
                    map.put(entry.getKey(), --val);
                    count -= 1;
                }
            }
            ans.add(row);        
        }

        return ans;
    }

    public List<List<Integer>> findMatrix(int[] nums) {
        return func(nums);
    }
}