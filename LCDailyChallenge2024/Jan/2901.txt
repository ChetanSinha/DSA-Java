https://leetcode.com/problems/implement-queue-using-stacks/

class MyQueue {

    Stack<Integer> stack1 = new Stack<>();
    Stack<Integer> stack2 = new Stack<>();

    public MyQueue() {
        
    }
    
    public void push(int x) {
        stack1.push(x);
    }
    
    public int pop() {
        if (this.empty()) {
            return -1;
        }

        if (stack2.size() > 0) {
            return stack2.pop();
        }

        while (stack1.size() > 0) {
            stack2.push(stack1.pop());
        }
        return stack2.pop();
    }
    
    public int peek() {
        if (this.empty()) {
            return -1;
        }

        if (stack2.size() > 0) {
            return stack2.peek();
        }

        while (stack1.size() > 0) {
            stack2.push(stack1.pop());
        }
        return stack2.peek();
    }

    public Integer size() {
        return stack1.size() + stack2.size();
    }
    
    public boolean empty() {
        return stack1 == null || stack2 == null || this.size() <= 0;
    }
}

/**
 * Your MyQueue object will be instantiated and called as such:
 * MyQueue obj = new MyQueue();
 * obj.push(x);
 * int param_2 = obj.pop();
 * int param_3 = obj.peek();
 * boolean param_4 = obj.empty();
 */