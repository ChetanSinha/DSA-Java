// https://leetcode.com/problems/climbing-stairs/?envType=daily-question&envId=2024-01-18

class Solution {
    private int func(int n, int[] dp) {
        if (n == 0) {
            dp[n] = 1;
            return 1;
        }
        if (n < 0) {
            return 0;
        }

        if (dp[n] != -1) {
            return dp[n];
        }

        int one = func(n-1, dp);
        int two = func(n-2, dp);

        return dp[n] = one + two;
    }

    public int climbStairs(int n) {
        int[] dp = new int[n+1];
        Arrays.fill(dp, -1);
        return func(n, dp);
    }
}